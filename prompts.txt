**First prompt**

实现一个agent平台. 包含后端和前端代码. 后端使用Rust单实例, 不要拆分微服务, 数据库使用mysql.
能够执行编排好的agent流程. 流程可以从dify DSL导入. 流程需要进行版本管理, 可以回退.
能够自动存储用户的聊天会话上下文.
能对接不同的大模型, 需抽象出trait.
能对接不同的向量库, 需抽象出trait.
能将普通的HTTP接口配置为MCP工具, MCP配置需要进行版本管理, 可以回退.
提供MCP host服务, 通过MCP配置将REST接口代理为MCP工具, 提供工具列表和工具调用能力.
提供认证接口, 传入租户ID及昵称和密码, 认证成功后在token中附带租户ID和用户ID及昵称, 流程执行时调用MCP和知识库时需透穿租户ID.
agent的执行需要有审计历史.
前端需要能管理agent流程和MCP工具的版本, 能配置向量库, 能配置MCP工具, 能审计agent调用, 能审计agent执行历史, 能查看用户会话历史.
前端还需提供苹果风格的首页, 包含基本的登录表单.

**Second prompt**

数据库访问层需要使用SeaORM. 业务逻辑严格限制在领域层

**Third prompt**

增加一个实体"数字人(Agent)", 包含以下属性:
- 租户ID
- 名称
- 头像
- 知识库列表
- MCP工具列表
- Flow列表
- 系统提示词
- 附加设定内容
- 预设问题列表(最多三个)
- 来源Agent ID(有值则代表该Agent自来源Agent复制而来)
- 创建人ID

只有Agent的创建人可以修改其配置.

并增加Agent与User的多对多雇佣关系表.

Agent列表界面采用卡片样式.

**Fourth prompt**

模型变更:
Agent只能有一个雇佣者, 用agents表的employer_id表示(空表示无人雇佣).
agent_employments表废弃.
当进行雇佣时, 首先对原Agent执行复制, 再填充其employer_id.
当解雇时, 填充fired_at字段.