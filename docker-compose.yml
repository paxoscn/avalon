# Docker Compose configuration for local development and testing
# Requirement 1.1, 1.2, 1.3: Complete deployment stack

version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: agent-platform-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: agent_platform
      MYSQL_USER: agent_user
      MYSQL_PASSWORD: agent_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agent-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: agent-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - agent-network

  # Agent Platform Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agent-platform-backend
    environment:
      DATABASE_URL: mysql://agent_user:agent_password@mysql:3306/agent_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-secret-key-change-in-production
      RUST_LOG: info
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - agent-network
    restart: unless-stopped

  # Frontend (optional - if running frontend in Docker)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: agent-platform-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:8080
    networks:
      - agent-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  agent-network:
    driver: bridge
